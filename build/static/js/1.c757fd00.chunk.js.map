{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","__webpack_require__","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","d","__webpack_exports__","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","r","global","MapShim","Map","getIndex","arr","result","some","entry","index","class_1","__entries__","prototype","get","set","push","delete","entries","splice","has","clear","callback","ctx","_i","_a","call","isBrowser","window","document","global$1","Math","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","props","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","contentRect","Constr","DOMRectReadOnly","create","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","g","hadRuntime","regeneratorRuntime","getOwnPropertyNames","oldRuntime","e","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","toString","object","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","tryEntries","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","pushTryEntry","locs","iteratorMethod"],"mappings":"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","file":"static/js/1.c757fd00.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = function () {\n  if (typeof Map !== 'undefined') {\n    return Map;\n  }\n  /**\r\n   * Returns index in provided array that matches the specified key.\r\n   *\r\n   * @param {Array<Array>} arr\r\n   * @param {*} key\r\n   * @returns {number}\r\n   */\n\n\n  function getIndex(arr, key) {\n    var result = -1;\n    arr.some(function (entry, index) {\n      if (entry[0] === key) {\n        result = index;\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }\n\n  return (\n    /** @class */\n    function () {\n      function class_1() {\n        this.__entries__ = [];\n      }\n\n      Object.defineProperty(class_1.prototype, \"size\", {\n        /**\r\n         * @returns {boolean}\r\n         */\n        get: function get() {\n          return this.__entries__.length;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      /**\r\n       * @param {*} key\r\n       * @returns {*}\r\n       */\n\n      class_1.prototype.get = function (key) {\n        var index = getIndex(this.__entries__, key);\n        var entry = this.__entries__[index];\n        return entry && entry[1];\n      };\n      /**\r\n       * @param {*} key\r\n       * @param {*} value\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.set = function (key, value) {\n        var index = getIndex(this.__entries__, key);\n\n        if (~index) {\n          this.__entries__[index][1] = value;\n        } else {\n          this.__entries__.push([key, value]);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.delete = function (key) {\n        var entries = this.__entries__;\n        var index = getIndex(entries, key);\n\n        if (~index) {\n          entries.splice(index, 1);\n        }\n      };\n      /**\r\n       * @param {*} key\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.has = function (key) {\n        return !!~getIndex(this.__entries__, key);\n      };\n      /**\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.clear = function () {\n        this.__entries__.splice(0);\n      };\n      /**\r\n       * @param {Function} callback\r\n       * @param {*} [ctx=null]\r\n       * @returns {void}\r\n       */\n\n\n      class_1.prototype.forEach = function (callback, ctx) {\n        if (ctx === void 0) {\n          ctx = null;\n        }\n\n        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n          var entry = _a[_i];\n          callback.call(ctx, entry[1], entry[0]);\n        }\n      };\n\n      return class_1;\n    }()\n  );\n}();\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\n\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document; // Returns global object of a current environment.\n\nvar global$1 = function () {\n  if (typeof global !== 'undefined' && global.Math === Math) {\n    return global;\n  }\n\n  if (typeof self !== 'undefined' && self.Math === Math) {\n    return self;\n  }\n\n  if (typeof window !== 'undefined' && window.Math === Math) {\n    return window;\n  } // eslint-disable-next-line no-new-func\n\n\n  return Function('return this')();\n}();\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\n\n\nvar requestAnimationFrame$1 = function () {\n  if (typeof requestAnimationFrame === 'function') {\n    // It's required to use a bounded function because IE sometimes throws\n    // an \"Invalid calling object\" error if rAF is invoked without the global\n    // object on the left hand side.\n    return requestAnimationFrame.bind(global$1);\n  }\n\n  return function (callback) {\n    return setTimeout(function () {\n      return callback(Date.now());\n    }, 1000 / 60);\n  };\n}(); // Defines minimum timeout before adding a trailing call.\n\n\nvar trailingTimeout = 2;\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\n\nfunction throttle(callback, delay) {\n  var leadingCall = false,\n      trailingCall = false,\n      lastCallTime = 0;\n  /**\r\n   * Invokes the original callback function and schedules new invocation if\r\n   * the \"proxy\" was called during current request.\r\n   *\r\n   * @returns {void}\r\n   */\n\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  /**\r\n   * Callback invoked after the specified delay. It will further postpone\r\n   * invocation of the original function delegating it to the\r\n   * requestAnimationFrame.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  /**\r\n   * Schedules invocation of the original function.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  function proxy() {\n    var timeStamp = Date.now();\n\n    if (leadingCall) {\n      // Reject immediately following calls.\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      } // Schedule new call to be in invoked when the pending one is resolved.\n      // This is important for \"transitions\" which never actually start\n      // immediately so there is a chance that we might miss one if change\n      // happens amids the pending invocation.\n\n\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n\n    lastCallTime = timeStamp;\n  }\n\n  return proxy;\n} // Minimum delay before invoking the update of observers.\n\n\nvar REFRESH_DELAY = 20; // A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\n\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight']; // Check if MutationObserver is available.\n\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\n\nvar ResizeObserverController =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserverController.\r\n   *\r\n   * @private\r\n   */\n  function ResizeObserverController() {\n    /**\r\n     * Indicates whether DOM listeners have been added.\r\n     *\r\n     * @private {boolean}\r\n     */\n    this.connected_ = false;\n    /**\r\n     * Tells that controller has subscribed for Mutation Events.\r\n     *\r\n     * @private {boolean}\r\n     */\n\n    this.mutationEventsAdded_ = false;\n    /**\r\n     * Keeps reference to the instance of MutationObserver.\r\n     *\r\n     * @private {MutationObserver}\r\n     */\n\n    this.mutationsObserver_ = null;\n    /**\r\n     * A list of connected observers.\r\n     *\r\n     * @private {Array<ResizeObserverSPI>}\r\n     */\n\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  /**\r\n   * Adds observer to observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be added.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    } // Add listeners if they haven't been added yet.\n\n\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  /**\r\n   * Removes observer from observers list.\r\n   *\r\n   * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer); // Remove observer if it's present in registry.\n\n    if (~index) {\n      observers.splice(index, 1);\n    } // Remove listeners if controller has no connected observers.\n\n\n    if (!observers.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  /**\r\n   * Invokes the update of observers. It will continue running updates insofar\r\n   * it detects changes.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_(); // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Updates every observer from observers list and notifies them of queued\r\n   * entries.\r\n   *\r\n   * @private\r\n   * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n   *      dimensions of it's elements.\r\n   */\n\n\n  ResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n      return observer.gatherActive(), observer.hasActive();\n    }); // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n\n    activeObservers.forEach(function (observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  /**\r\n   * Initializes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n      return;\n    } // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n\n\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      this.mutationsObserver_.observe(document, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    } else {\n      document.addEventListener('DOMSubtreeModified', this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n  };\n  /**\r\n   * Removes DOM listeners.\r\n   *\r\n   * @private\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  /**\r\n   * \"Transitionend\" event handler.\r\n   *\r\n   * @private\r\n   * @param {TransitionEvent} event\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\n    var _b = _a.propertyName,\n        propertyName = _b === void 0 ? '' : _b; // Detect whether transition may affect dimensions of an element.\n\n    var isReflowProperty = transitionKeys.some(function (key) {\n      return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  /**\r\n   * Returns instance of the ResizeObserverController.\r\n   *\r\n   * @returns {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n      this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n  };\n  /**\r\n   * Holds reference to the controller's instance.\r\n   *\r\n   * @private {ResizeObserverController}\r\n   */\n\n\n  ResizeObserverController.instance_ = null;\n  return ResizeObserverController;\n}();\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\n\n\nvar defineConfigurable = function defineConfigurable(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key = _a[_i];\n    Object.defineProperty(target, key, {\n      value: props[key],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n\n  return target;\n};\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\n\n\nvar getWindowOf = function getWindowOf(target) {\n  // Assume that the element is an instance of Node, which means that it\n  // has the \"ownerDocument\" property from which we can retrieve a\n  // corresponding global object.\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView; // Return the local global object if it's not possible extract one from\n  // provided element.\n\n  return ownerGlobal || global$1;\n}; // Placeholder of an empty content rectangle.\n\n\nvar emptyRect = createRectInit(0, 0, 0, 0);\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\n\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\n\n\nfunction getBordersSize(styles) {\n  var positions = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n\n  return positions.reduce(function (size, position) {\n    var value = styles['border-' + position + '-width'];\n    return size + toFloat(value);\n  }, 0);\n}\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\n\n\nfunction getPaddings(styles) {\n  var positions = ['top', 'right', 'bottom', 'left'];\n  var paddings = {};\n\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles['padding-' + position];\n    paddings[position] = toFloat(value);\n  }\n\n  return paddings;\n}\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getHTMLElementContentRect(target) {\n  // Client width & height properties can't be\n  // used exclusively as they provide rounded values.\n  var clientWidth = target.clientWidth,\n      clientHeight = target.clientHeight; // By this condition we can catch all non-replaced inline, hidden and\n  // detached elements. Though elements with width & height properties less\n  // than 0.5 will be discarded as well.\n  //\n  // Without it we would need to implement separate methods for each of\n  // those cases and it's not possible to perform a precise and performance\n  // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n  // gives wrong results for elements with width & height less than 0.5.\n\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n\n  var styles = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom; // Computed styles of width & height are being used because they are the\n  // only dimensions available to JS that contain non-rounded values. It could\n  // be possible to utilize the getBoundingClientRect if only it's data wasn't\n  // affected by CSS transformations let alone paddings, borders and scroll bars.\n\n  var width = toFloat(styles.width),\n      height = toFloat(styles.height); // Width & height include paddings and borders when the 'border-box' box\n  // model is applied (except for IE).\n\n  if (styles.boxSizing === 'border-box') {\n    // Following conditions are required to handle Internet Explorer which\n    // doesn't include paddings and borders to computed CSS dimensions.\n    //\n    // We can say that if CSS dimensions + paddings are equal to the \"client\"\n    // properties then it's either IE, and thus we don't need to subtract\n    // anything, or an element merely doesn't have paddings/borders styles.\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles, 'left', 'right') + horizPad;\n    }\n\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n    }\n  } // Following steps can't be applied to the document's root element as its\n  // client[Width/Height] properties represent viewport area of the window.\n  // Besides, it's as well not necessary as the <html> itself neither has\n  // rendered scroll bars nor it can be clipped.\n\n\n  if (!isDocumentElement(target)) {\n    // In some browsers (only in Firefox, actually) CSS width & height\n    // include scroll bars size which can be removed at this step as scroll\n    // bars are the only difference between rounded dimensions + paddings\n    // and \"client\" properties, though that is not always true in Chrome.\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight; // Chrome has a rather weird rounding of \"client\" properties.\n    // E.g. for an element with content width of 314.2px it sometimes gives\n    // the client width of 315px and for the width of 314.7px it may give\n    // 314px. And it doesn't happen all the time. So just ignore this delta\n    // as a non-relevant.\n\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nvar isSVGGraphicsElement = function () {\n  // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n  // interface.\n  if (typeof SVGGraphicsElement !== 'undefined') {\n    return function (target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  } // If it's so, then check that element is at least an instance of the\n  // SVGElement and that it has the \"getBBox\" method.\n  // eslint-disable-next-line no-extra-parens\n\n\n  return function (target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function';\n  };\n}();\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\n\n\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n\n  return getHTMLElementContentRect(target);\n}\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\n\n\nfunction createReadOnlyRect(_a) {\n  var x = _a.x,\n      y = _a.y,\n      width = _a.width,\n      height = _a.height; // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n\n  var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype); // Rectangle's properties are not writable and non-enumerable.\n\n  defineConfigurable(rect, {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: height + y,\n    left: x\n  });\n  return rect;\n}\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\n\n\nfunction createRectInit(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\n\n\nvar ResizeObservation =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObservation.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   */\n  function ResizeObservation(target) {\n    /**\r\n     * Broadcasted width of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n    this.broadcastWidth = 0;\n    /**\r\n     * Broadcasted height of content rectangle.\r\n     *\r\n     * @type {number}\r\n     */\n\n    this.broadcastHeight = 0;\n    /**\r\n     * Reference to the last observed content rectangle.\r\n     *\r\n     * @private {DOMRectInit}\r\n     */\n\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  /**\r\n   * Updates content rectangle and tells whether it's width or height properties\r\n   * have changed since the last broadcast.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n  };\n  /**\r\n   * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n   * from the corresponding properties of the last observed content rectangle.\r\n   *\r\n   * @returns {DOMRectInit} Last observed content rectangle.\r\n   */\n\n\n  ResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n\n  return ResizeObservation;\n}();\n\nvar ResizeObserverEntry =\n/** @class */\nfunction () {\n  /**\r\n   * Creates an instance of ResizeObserverEntry.\r\n   *\r\n   * @param {Element} target - Element that is being observed.\r\n   * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n   */\n  function ResizeObserverEntry(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit); // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n\n    defineConfigurable(this, {\n      target: target,\n      contentRect: contentRect\n    });\n  }\n\n  return ResizeObserverEntry;\n}();\n\nvar ResizeObserverSPI =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n   *      when one of the observed elements changes it's content dimensions.\r\n   * @param {ResizeObserverController} controller - Controller instance which\r\n   *      is responsible for the updates of observer.\r\n   * @param {ResizeObserver} callbackCtx - Reference to the public\r\n   *      ResizeObserver instance which will be passed to callback function.\r\n   */\n  function ResizeObserverSPI(callback, controller, callbackCtx) {\n    /**\r\n     * Collection of resize observations that have detected changes in dimensions\r\n     * of elements.\r\n     *\r\n     * @private {Array<ResizeObservation>}\r\n     */\n    this.activeObservations_ = [];\n    /**\r\n     * Registry of the ResizeObservation instances.\r\n     *\r\n     * @private {Map<Element, ResizeObservation>}\r\n     */\n\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  /**\r\n   * Starts observing provided element.\r\n   *\r\n   * @param {Element} target - Element to be observed.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is already being observed.\n\n    if (observations.has(target)) {\n      return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this); // Force the update of observations.\n\n    this.controller_.refresh();\n  };\n  /**\r\n   * Stops observing provided element.\r\n   *\r\n   * @param {Element} target - Element to stop observing.\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    } // Do nothing if current environment doesn't have the Element interface.\n\n\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n      return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_; // Do nothing if element is not being observed.\n\n    if (!observations.has(target)) {\n      return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  /**\r\n   * Stops observing all elements.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  /**\r\n   * Collects observation instances the associated element of which has changed\r\n   * it's content rectangle.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.gatherActive = function () {\n    var _this = this;\n\n    this.clearActive();\n    this.observations_.forEach(function (observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  /**\r\n   * Invokes initial callback function with a list of ResizeObserverEntry\r\n   * instances collected from active resize observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n      return;\n    }\n\n    var ctx = this.callbackCtx_; // Create ResizeObserverEntry instance for every active observation.\n\n    var entries = this.activeObservations_.map(function (observation) {\n      return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  /**\r\n   * Clears the collection of active observations.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  ResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n  };\n  /**\r\n   * Tells whether observer has active observations.\r\n   *\r\n   * @returns {boolean}\r\n   */\n\n\n  ResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n  };\n\n  return ResizeObserverSPI;\n}(); // Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\n\n\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\n\nvar ResizeObserver =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new instance of ResizeObserver.\r\n   *\r\n   * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n   *      dimensions of the observed elements change.\r\n   */\n  function ResizeObserver(callback) {\n    if (!(this instanceof ResizeObserver)) {\n      throw new TypeError('Cannot call a class as a function.');\n    }\n\n    if (!arguments.length) {\n      throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n    observers.set(this, observer);\n  }\n\n  return ResizeObserver;\n}(); // Expose public methods of ResizeObserver.\n\n\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n  ResizeObserver.prototype[method] = function () {\n    var _a;\n\n    return (_a = observers.get(this))[method].apply(_a, arguments);\n  };\n});\n\nvar index = function () {\n  // Export existing implementation if available.\n  if (typeof global$1.ResizeObserver !== 'undefined') {\n    return global$1.ResizeObserver;\n  }\n\n  return ResizeObserver;\n}();\n\nexport default index;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = function () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")(); // Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\n\nvar hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.\n\nvar oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\ng.regeneratorRuntime = undefined;\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch (e) {\n    g.regeneratorRuntime = undefined;\n  }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n!function (global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    } // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n\n\n    return;\n  } // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n\n\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  runtime.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  runtime.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  runtime.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n}( // In sloppy mode, unbound `this` refers to the global object, fallback to\n// Function constructor if we're in global strict mode. That is sadly a form\n// of indirect eval which violates Content Security Policy.\nfunction () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")());"],"sourceRoot":""}